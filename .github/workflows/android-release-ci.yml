name: Android Release (Capacitor)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Ensure webDir=www + assets
        run: |
          # force webDir=www (si fichier pr√©sent)
          if [ -f capacitor.config.json ]; then
            node -e "let c=require('./capacitor.config.json'); c.webDir='www'; require('fs').writeFileSync('capacitor.config.json', JSON.stringify(c,null,2))"
          fi
          # assets minimaux
          mkdir -p www
          [ -f www/index.html ] || printf '<h1>Sadika</h1>' > www/index.html
          # parachute si qqun attend encore ./build
          rm -rf build; ln -s www build || cp -R www build
          echo "--- tree ---"; ls -la
          echo "--- capacitor.config.json ---"; cat capacitor.config.json

      - name: Install Capacitor CLI
        run: |
          [ -f package.json ] || npm init -y
          npm i -D @capacitor/cli @capacitor/core @capacitor/android

      - name: Decode Keystore
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        run: echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > $HOME/alsadika.keystore

      - name: Capacitor Copy & Sync (root)
        run: |
          npx cap copy android
          npx cap sync android
          echo "--- post-sync config ---"
          cat android/app/src/main/assets/capacitor.config.json || true
          ls -la android/app/src/main/assets/public || true

      - name: Configure signing.gradle
        working-directory: ./android/app
        run: |
          cat > signing-config.gradle <<'GR'
          android {
            signingConfigs {
              release {
                storeFile file(System.getenv("ALSADIKA_KEYSTORE") ?: System.getenv("HOME") + "/alsadika.keystore")
                storePassword System.getenv("ANDROID_KEYSTORE_PASSWORD")
                keyAlias System.getenv("ANDROID_KEY_ALIAS")
                keyPassword System.getenv("ANDROID_KEY_PASSWORD")
              }
            }
            buildTypes {
              release {
                signingConfig signingConfigs.release
                minifyEnabled false
              }
            }
          }
          GR
          sed -i '/apply plugin/s/$/\napply from: "app\/signing-config.gradle"/' ../build.gradle || true

      - name: Build Release (Gradle)
        working-directory: ./android
        env:
          ALSADIKA_KEYSTORE: ${{ env.HOME }}/alsadika.keystore
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: ./gradlew assembleRelease --no-daemon

      - name: Upload app-release.apk
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: android/app/build/outputs/apk/release/app-release.apk
